# -*- coding: utf-8 -*-
"""
Created on Wed Dec 11 15:50:17 2024

@author: jaborger
Returns the temperature for a certain resistance and sensor
The switch from one set of coefficients to another is based on the first
data point in the data set of the higher temperature coefficients
"""   
import numpy as np

def calculate_T(R,Serial_no):
    """Serial number is the final 2 digits of the full number"""
    


    index = [0]
    if type(R)==list:
        T = np.zeros(len(R))
    elif type(R)==np.ndarray:
        T = np.zeros(R.size)
    else:
        T = np.array([0.0])
        R= np.array([R])
        
    if type(Serial_no)==list:
        if len(Serial_no)==T.size:
            multisensor_bool =True
        else:
            multisensor_bool =False
    elif type(Serial_no)==np.ndarray:
        if Serial_no.size==T.size:
            multisensor_bool =True
        else:
            multisensor_bool =False
    else:
        multisensor_bool =False
        
    index=list(range(T.size))
    if not(multisensor_bool): 
        if type(Serial_no)==str:
            # incase people still input full string
            Serial_no= int(Serial_no.strip()[-2:])

        
    for i in index:
            
        if multisensor_bool: 
            if type(Serial_no[i])==str:
                # incase people still input full string
                Serial_no[i] = int(Serial_no[i].strip()[-2:])
            K1, K2, K3, K4, K5, K6, K7 = getCoefficients(R[i],Serial_no[i])
        else:
            K1, K2, K3, K4, K5, K6, K7 = getCoefficients(R[i],Serial_no)
        
        term = 1000 / R[i]
        T[i] = (K1 + 
             K2 * term + 
             K3 * term**2 + 
             K4 * term**3 + 
             K5 * term**4 + 
             K6 * term**5 + 
             K7 * term**6)
    
    return T
        
def getCoefficients(R,Serial_no):
    
    match Serial_no:
        case 20:
            if R>=1933.48:
                C = np.array([22.757547624973054, -361.0491702916585, 2461.2783666025284, -8668.55717471647, 17225.57153902782, -18199.507354732763, 8351.384065])
            elif R>=1328.38:
                C = np.array([-3242.8377488793494, 29789.014858353916, -113233.74897204206, 228398.73568053485, -258058.5090262248, 155212.641935429, -38563.83281476373])
            else:
                C = np.array([-743.1058924197558, -57.630006638776614, 11259.622287391518, -26766.44247934368, 23314.285691344085, -6186.886224825162, -479.0939497535087])
    
        case 21:
            if R>=1812.38:
                C = np.array([6.803463708315638, -96.32671409087214, 658.6030929510213, -2188.445711054867, 4191.347925072403, -4260.881249937622, 2015.9632167698023])
            elif R>=1217.37:
                C = np.array([0.25333981680847845, -89.6709883293285, 928.383716713874, -3181.155934016148, 5075.957097417154, -3677.9875712699086, 1154.4870255541318])
            else:
                C = np.array([222908.21378485335, -1433495.0637964597, 3832212.2216227446, -5450604.863014827, 4349679.951519835, -1846141.1945304824, 325650.2138781062])
    
        case 23:
            if R>=1845.25:
                C = np.array([20.19929776003372, -321.7807003913002, 2223.147109820467, -7834.842941872262, 15422.188787051156, -15951.132187816675, 7013.100661990247])
            elif R>=1232.11:
                C = np.array([1833.4172090224313, -16597.59570942824, 62537.26104968852, -125105.55165990592, 139977.11013438023, -82753.74284370641, 20338.901107462538])
            else:
                C = np.array([143896.91194064592, -925861.0037777569, 2475809.700284903, -3521371.933722347, 2809219.1329911826, -1191354.3628719824, 209876.51112805106])
        case 25:
            if R>=2052.82:
                C = np.array([-0.5214014799384421,31.210018185467096,-169.72751348653205,706.7564148362691,-1336.464189784153,1267.734973585255,-121.8814736548169])
            elif R>=1327.22:
                C = np.array([108.72738886550727,-1840.2548934092074,10783.425237880436,-30226.90777129058,44722.90631361729,-33531.00342257663,10352.523517808233])
            else:
                C = np.array([326319.8517924995,-2292545.3988146335,6695725.916632472,6695725.916632472,-1040591.901004381,9072899.081779642,-4208275.64541968,811285.765793042])
        case 29:
            if R>=1691.83:
                C = np.array([56.866830351192704, -816.7153503512191, 4914.607226026244, -15446.013137545522, 27100.250828949233, -25104.858767943206, 9752.937942501374])
            elif R>=1158.51:
                C = np.array([-1.107565571478211, -291.16705937016997, 2171.0254267387304, -6051.976858119332, 8161.575053000712, -5249.295334086511, 1430.3952304268419])
            else:
                C = np.array([474.5468829053257, -3977.226029200383, 9745.695987794306, -7701.13464025109, -2742.782517651534, 6782.4661249876635, -2411.3126996006195])
        case 30:
            if R>=1848.18:
                C = np.array([36.31403582858987, -559.7444362399322, 3650.0199699237583, -12381.544981768153, 23539.793006647295, -23685.097873153074, 10126.327985425825])
            elif R>=1262.79:
                C = np.array([774.5401338386047, -7604.425352676415, 31124.175698205447, -67491.30283377349, 81628.43020193426, -51969.53314875225, 13823.086150626883])
            else:
                C = np.array([-474.89446396003854, -8709.743338026154, 54329.00015429197, -119670.8751775245, 126815.14361694889, -65264.5394098373, 13237.780719619823])
    
        case 32:
            if R>=1496.91:
                C = np.array([8.941907652902644, -10.760180558540743, -183.63506513628948, 365.4414557492325, 1047.466791552571, -3417.0567461826136, 2602.0081819735174])
            elif R>=1196.89:
                C = np.array([-2172.165682286257, 11865.069699024994, -20498.240758609933, 2521.0115478134344, 30439.48144083711, -33127.27315798601, 11265.014654650597])
            else:
                C = np.array([37811.98705873846, -203966.9324377338, 420271.4816898369, -386389.42634134326, 108166.1924699527, 54602.621047496876, -30213.187696285848])
    
        case 33:
            if R>=1909.63:
                C = np.array([18.990540170494935, -300.32382628046383, 2062.3091809866964, -7283.291951560712, 14529.499710733355, -15393.833239258722, 7091.119057891583])
            elif R>=1302.85:
                C = np.array([1172.7736310718003, -11989.921460048738, 50815.92420597402, -113811.99049046222, 141967.85524459515, -93262.11645429845, 25472.063203716756])
            else:
                C = np.array([194864.51074058237, -1350077.6906307454, 3887965.075329488, -5956135.143531974, 5118462.318190635, -2338842.5969075924, 444066.4994019742])
    
        case 34:
            if R>=1703.35:
                C = np.array([44.33728241860563, -633.9568246542659, 3814.8566623505185, -11963.398525101444, 20982.19783847046, -19437.693653735387, 7591.204231134459])
            elif R>=1157.4:
                C = np.array([617.6912939217355, -5658.596887283507, 21525.595489791987, -43212.06035093029, 48246.448356408335, -28272.585876076897, 6923.00660711697])
            else:
                C = np.array([-307.2585885300277, 107.55944525329849, 1024.8374537221475, 1930.2627714584112, -8401.708011812423, 8365.850328130638, -2552.24694065468])
    
        case 35:
            if R>=1760.72:
                C = np.array([-5.157167079614838, 95.36263022168072, -591.2199130867411, 2106.174182790657, -4019.9029982334987, 4035.1036384174913, -1499.6133871541372])
            elif R>=1170.78:
                C = np.array([91.50648614032016, -1009.0386415512921, 4494.936713760119, -10102.35927008923, 12246.972127660689, -7505.752924560148, 1957.3316223194095])
            else:
                C = np.array([-770.6798367009945, -1618.5231172389817, 18132.352357554937, -39883.37773920011, 38584.77698953337, -17158.483282583114, 2887.760562194193])
        case 36:
            if R>=1481.25:
                C = np.array([2711.4743003526537, -28399.930450153413, 123714.76139388664, -287061.2212155685, 374650.2109796908, -261166.2604662172, 76235.26590599018])
            elif R>=1162.39:
                C = np.array([-788.222176330906, 2627.753316340311, 3401.888269825121, -26691.760646503983, 45740.82447781952, -33639.03563472225, 9574.83878163852])
            else:
                C = np.array([150558.56015013985, -626057.4587257273, 754877.4399698406, 242982.18288260495, -1256532.448749014, 991454.2723763649, -257065.6897954699])

        case 1:
            if R>=2042.2:
                C = np.array([-1.537932915543371, 49.819853718318534, -313.2991136341029, 1274.7265679434283, -2572.369849887132, 2657.524085207821, -749.3109721621692])
            elif R>=1331.36:
                C = np.array([529.4783615632715, -6291.316764763459, 30198.529092965415, -74949.8046946708, 102125.32802866974, -72494.31335171137, 21302.4625026179])
            else:
                C = np.array([363191.3977775937, -2566816.1676057433, 7542679.198581987, -11794922.891558668, 10351163.81483036, -4833056.823920836, 938092.7814895861])

        case 2:
            if R>=2130.34:
                C = np.array([6.026762783068639, -104.56638257747295, 982.4516599220595, -4335.90221226469, 10765.938527564966, -13773.562915845527, 7501.341857548916])
            elif R>=1334.84:
                C = np.array([1157.2968194122716, -12404.821019033354, 55079.573937785055, -129154.94425978341, 168824.05236401013, -116269.37575328267, 33183.73328582141])
            else:
                C = np.array([181743.6119908678, -1267757.5283448177, 3674608.2400655355, -5664206.5956114605, 4896784.311032839, -2250610.60095875, 429727.4098074391])

        case 3:
            if R>=2008.3:
                C = np.array([0.6629563670634002, 9.407271246803393, -6.3747731953006275, 52.21788504653699, 99.73083943728282, -391.43661792829903, 631.6878532291748])
            elif R>=1308.65:
                C = np.array([-1530.1312089928608, 13978.059530731329, -52646.16749388023, 105043.81134744392, -117105.3098721193, 69389.52894303488, -16832.1351607373])
            else:
                C = np.array([-5582.263448836988, 19787.899276699733, -6438.8458667812665, -60635.51814413876, 105926.35798626645, -69282.09100199364, 16529.54429655012])
        case 4:
            if R>=2037.86:
                C = np.array([7.609794562246219, -114.76399299484454, 887.7143654106032, -3326.571618617177, 7186.413020400267, -8199.263250725055, 4198.438652990989])
            elif R>=1320.38:
                C = np.array([24.276137659108244, -1220.0315958109627, 9057.20136566065, -28100.217538504654, 43885.93448870774, -33924.42061737116, 10630.293043816255])
            else:
                C = np.array([-1374.6821479214202, -755.3320032073634, 28470.734933891257, -77842.29482856006, 90351.0650565429, -48616.27505899348, 10067.063241007738])

        case 5:
            if R>=2123.9:
                C = np.array([-2.7403905749570576, 74.10908371507416, -494.5433976681901, 2023.6454798171083, -4273.049972717347, 4725.190505135626, -1751.6059608215032])
            elif R>=1357.05:
                C = np.array([1882.617561032253, -19941.897285046914, 87514.87459441558, -203135.01535563037, 263179.4911228245, -180192.65946193083, 51242.60232895883])
            else:
                C = np.array([-2659.427658485539, 8861.424993827652, 96.78314622238287, -34968.91332860544, 54936.66281054658, -33217.76076389688, 7296.878660432837])

        case 6:
            if R>=2044.67:
                C = np.array([-1.613660636496977, 51.43240646966442, -315.3568883134344, 1276.637436405362, -2599.5075320379538, 2796.1660640477685, -947.8874633395001])
            elif R>=1292.38:
                C = np.array([146.40724467508048, -2209.2764125249632, 12213.49155133781, -33020.4216549229, 47611.314131836014, -34980.20044318614, 10546.356303060964])
            else:
                C = np.array([230852.05185366675, -1573232.4418358346, 4456222.885570792, -6714353.460116116, 5675167.061620588, -2550749.1607503947, 476357.5093639297])
        case 7:
            if R>=2062.77:
                C = np.array([0.35294592127461566, 15.498036702401883, -47.19482481152917, 214.47798760495758, -242.08239216823011, 2.698593656927244, 468.837815988588])
            elif R>=1324.15:
                C = np.array([505.56577044981435, -5908.349331850542, 28054.85714205118, -69093.01827247092, 93631.89994037461, -66163.36061988273, 19362.20431790045])
            else:
                C = np.array([-989.753019038549, 723.4302168462907, 13504.000133981917, -40442.2226942631, 47449.320398810065, -24861.888944145157, 4925.96194444668])

        case 8:
            if R>=2018.99:
                C = np.array([-0.810002421881888, 36.48011302740256, -209.34054111518702, 848.1121014775529, -1614.6947628341113, 1532.572983132818, -234.7068436033283])
            elif R>=1318.72:
                C = np.array([1147.8987411926623, -12425.643318952165, 55327.37676179636, -129367.97529073064, 167853.40736560052, -114525.26563227737, 32420.58034594077])
            else:
                C = np.array([223438.35131033885, -1571242.4066353089, 4592372.666488863, -7139638.123925572, 6226104.552115601, -2886860.546073823, 556144.1403807106])

        case 9:
            if R>=2011.5:
                C = np.array([0.7377910613937959, 6.997521072515588, 16.75715709659116, -59.926229260218655, 394.20308652757257, -785.8714662390684, 846.9102131027712])
            elif R>=1311.66:
                C = np.array([-9.036993560256828, -945.6614326585958, 8046.27716288253, -25933.734903244367, 41115.251928937265, -32069.87104180469, 10159.51315938685])
            else:
                C = np.array([507352.2908292162, -3536770.87477645, 10252638.65424091, -15818822.379827632, 13699936.773577748, -6313953.745300178, 1209931.3233070166])

        case 10:
            if R>=2079.71:
                C = np.array([-2.4290752158358693, 67.19907214147909, -430.91223215057107, 1721.432737841881, -3520.551199158933, 3769.188867451922, -1320.4536443584213])
            elif R>=1322.31:
                C = np.array([1673.711177159567, -17276.28807779284, 73863.62606393652, -166939.434756461, 210514.66372262203, -140212.35514427873, 38795.13792278006])
            else:
                C = np.array([-1920.2747611967848, -1158.1670848588972, 42128.7027113305, -118650.68124134053, 143255.06703948756, -81379.60000031885, 18031.025138736804])

    return C

